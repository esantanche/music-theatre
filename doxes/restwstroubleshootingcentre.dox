/**
 * @page restwstroubleshootingcentre RESTws Troubleshooting Centre
 *
 * Everything about RESTws and how to troubleshoot it
 *
 * @section whatrestwsis What RESTws is
 *
 * RESTws is our Drupal 7 REST calls implementation of choice.
 * Our REST calls are all made through RESTws module
 *
 * @section restfullnessofourcalls Are our rest calls really restful?
 *
 * The answer here: @ref whatrestfulserveris
 *
 * @section readmefirstinfoaboutrestws Read-me-first information about RESTws
 *
 * This is the main page about RESTws module: https://www.drupal.org/project/restws
 *
 * The name of the module in the modules list is "RESTful web services (restws)"
 *
 * This is essential to understand RESTws: http://cgit.drupalcode.org/restws/plain/README.txt?id=refs/heads/7.x-2.x
 *
 * The types of property RESTws supports: http://api.drupal.psu.edu/api/drupal/modules!contrib!entity!entity.api.php/function/hook_entity_property_info/cis7
 *
 * How authentication works when using RESTws: https://www.drupal.org/node/1913358
 *
 * @section restwsplaces RESTws RESTws places
 *
 * Where RESTws stores settings, sources and data
 *
 * Our RESTws resources are in our module called "Musth RESTws service" and stored in
 * backend/sites/default/modules/musth_restws
 *
 * Permissions are accessed from Drupal menu: People->Permissions, search for RESTful web services
 *
 * @section restwstroubleshootingcases RESTws troubleshooting cases
 *
 * @subsection restwstroubleshootingcases_permissions Checking permissions
 *
 * You can check permissions by going to menu item People->Permissions. The permissions we
 * want are under the header "RESTful web services".
 *
 * There are many resources listed. The ones that need permissions are those whose name
 * begins with "musth_restws_". They need permission for all roles, anonymous, authenticated and
 * administrator.
 *
 * There is an additional EMAROLE that may be a test we forgot to delete. No harm done if you give
 * permission to that role too.
 *
 * Other resources should have no permission.
 *
 * @subsection restwstroubleshootingcases_registry Rebuilding the registry
 *
 * Yes, Drupal has a registry like you-know-what, I can't name it, it's so awful. ;-)
 * Like you-know-what's registry, Drupal one can get corrupted.
 *
 * To rebuild the registry follow these instructions: https://www.drupal.org/project/registry_rebuild
 *
 * @subsection restwstroubleshootingcases_sessions Investigating sessions
 *
 * If you need to investigate sessions, consider that Drupal overrides php standard session management and
 * stores sessions in a database table called sessions.
 *
 * This is why you won't find sessions in /var/lib/php5, which is the standard folder when Debian stores
 * php session.
 *
 * If, whilst investigating sessions, you look for tokens, you won't find them because they are calculated
 * on the fly.
 *
 * Let's remember that tokens are generated by RESTws to add an additional security mechanism when
 * writing method are called.
 *
 * Writing methods are create, update and delete.
 *
 * In the database table 'variable' you find the variable 'drupal_private_key', which is used to
 * calculate tokens. You may want to check if it's actually there.
 *
 * Its value may look like this:
 *
 *     s:43:"eIbfD5ZGG34drcHyoElBcqKQYaFTMUnGYgBlcx6zttw";
 *
 * RESTws generates tokens in its function restws_session_token, which calls Drupal standard functions
 * like drupal_get_token and drupal_valid_token.
 *
 * @subsection restwstroubleshootingcases_wrongpagination Wrong pagination in RESTws
 *
 * In Open Atrium Cmor Intranet there is a page titled "Emergency fix to RESTws".
 * It's about a fix made to the RETSws module.
 *
 * The fix corrects a defect in pagination RESTws has.
 *
 * If you happen to have pagination problems when calling RESTws apis, it may be that this fix has been
 * overwritten maybe by an update.
 *
 * @subsection restwstroubleshootingcases_basic_auth RESTws basic authentication
 *
 * We don't use http basic authentication (https://en.wikipedia.org/wiki/Basic_access_authentication)
 * to authenticate users when a REST call is made.
 *
 * We use Drupal logins and cookies.
 *
 * But we still use http basic authentication when using SoapUI to debug.
 *
 * The module Basic authentication login (restws_basic_auth) implements basic authentication for RESTws.
 *
 * For it to work there has to be a setting in the file /backend/sites/default/settings.php:
 *
 * @htmlonly$conf['restws_basic_auth_user_regex'] = '/.*/';@endhtmlonly
 *
 * There are two required http headers that have to be provided:
 *
 * * Header 'Accept' with value 'application/json'
 * * Header 'Authorization' with value 'Basic <base 64 encoded credentials>'
 *
 * The base 64 encoded credentials are formed by joining user name and password in a string in this way:
 *
 *     <user name>:<password>
 *
 * This string has to be base-64 encoded.
 *
 * @subsection restwstroubleshootingcases_entity_apis RESTws depends on Entity API module
 *
 * RESTws module depends on Entity API module. If the latter has been updated, there may be problems
 * affecting RESTws.
 *
 * @subsection restwstroubleshootingcases_soapui SoapUI to debug RESTws
 *
 * To debug RESTws we use SoapUI. See @ref testoverview
 */
