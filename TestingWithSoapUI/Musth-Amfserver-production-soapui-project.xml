<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Musth Amfserver production" resourceRoot="" soapui-version="5.0.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite name="API.get_flash_config"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JustCallIt" searchProperties="true"><con:settings/><con:testStep type="amfrequest" name="AMF Request"><con:settings/><con:config xsi:type="con:AMFRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties/><con:assertion type="Simple Contains" name="ContainsGenre"><con:configuration><token>Genre</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match string filter"><con:configuration><path>/map/entry/string[1]</path><content>filters</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match"><con:configuration/></con:assertion><con:assertion type="XPath Match" name="XPath Match string Form"><con:configuration><path>/map/entry/object-array/map[2]/entry[1]/string[2]</path><content>Form</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:endpoint>http://musictheatre-production/amf_partners</con:endpoint><con:amfCall>API.get_flash_config</con:amfCall></con:config></con:testStep><con:loadTest name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="API.get_items_by_id"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SingleIdAsArray" searchProperties="true"><con:settings/><con:testStep type="amfrequest" name="AMF Request"><con:settings/><con:config xsi:type="con:AMFRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ids</con:name><con:value/></con:property></con:properties><con:assertion type="Simple Contains" name="ContainsDonPasquale"><con:configuration><token>Don Pasquale</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:endpoint>http://musictheatre-production/amf_partners</con:endpoint><con:script>def intIds = new int[1];
intIds[0] = 824;

parameters['ids'] = intIds;</con:script><con:amfCall>API.get_items_by_id</con:amfCall></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TwoIdsAsArray" searchProperties="true"><con:settings/><con:testStep type="amfrequest" name="AMF Request"><con:settings/><con:config xsi:type="con:AMFRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>ids</con:name><con:value xsi:nil="true"/></con:property></con:properties><con:assertion type="Simple Contains" name="ContainsLaRondineatLaFenice"><con:configuration><token>La Rondine at La Fenice</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsRiccardoMuticonducts"><con:configuration><token>Riccardo Muti conducts</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:endpoint>http://musictheatre-production/amf</con:endpoint><con:script>def intIds = new int[2];
intIds[0] = 26;
intIds[1] = 27;

parameters['ids'] = intIds;</con:script><con:amfCall>API.get_items_by_id</con:amfCall></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="nodequeue.getQueueMediaIds"><con:description>Test api nodequeue.getQueueMediaIds</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="NoParameters" searchProperties="true"><con:description>Test api sending no parameters. No nodeque id is provided. Currently this parameter is ignored by the api</con:description><con:settings/><con:testStep type="amfrequest" name="AMF Request"><con:settings/><con:config xsi:type="con:AMFRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties/><con:assertion type="XPath Match" name="XPath Match 27"><con:configuration><path>/object-array/int[2]</path><content>27</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match Count of int"><con:configuration><path>count(/object-array/int)</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:endpoint>http://musictheatre-production/amf_partners</con:endpoint><con:amfCall>nodequeue.getQueueMediaIds</con:amfCall></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="QueueNo1" searchProperties="true"><con:description>Test api sending the playlist id as a parameter. The playlist id 1 is sent. Currently this parameter is ignored by the api</con:description><con:settings/><con:testStep type="amfrequest" name="AMF Request"><con:settings/><con:config xsi:type="con:AMFRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>qid</con:name><con:value>1</con:value></con:property></con:properties><con:assertion type="XPath Match" name="XPath Match 27"><con:configuration><path>/object-array/int[2]</path><content>27</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match Count of int"><con:configuration><path>count(/object-array/int)</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:endpoint>http://musictheatre-production/amf</con:endpoint><con:amfCall>nodequeue.getQueueMediaIds</con:amfCall></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="API.get_filtered_terms"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OnlyTheVid" searchProperties="true"><con:settings/><con:testStep type="amfrequest" name="AMF Request"><con:settings/><con:config xsi:type="con:AMFRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>vid</con:name><con:value>4</con:value></con:property></con:properties><con:assertion type="Simple Contains" name="ContainsChamberMusic"><con:configuration><token>Chamber Music</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:endpoint>http://musictheatre-production/amf</con:endpoint><con:script/><con:amfCall>API.get_filtered_terms</con:amfCall></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="VidAndFilters" searchProperties="true"><con:settings/><con:testStep type="amfrequest" name="AMF Request"><con:settings/><con:config xsi:type="con:AMFRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>vid</con:name><con:value>18</con:value></con:property><con:property><con:name>query_string</con:name><con:value>1=89&amp;5=93&amp;9=134</con:value></con:property></con:properties><con:assertion type="Simple Contains" name="ContainsChamberMusic"><con:configuration><token>Piacenza Theatre</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:endpoint>http://musictheatre-production/amf</con:endpoint><con:script/><con:amfCall>API.get_filtered_terms</con:amfCall></con:config></con:testStep><con:loadTest name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>30</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>10</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="API.get_item_ids"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="QueryStringWithSinglevid" searchProperties="true"><con:settings/><con:testStep type="amfrequest" name="AMF Request"><con:settings/><con:config xsi:type="con:AMFRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>query_string</con:name><con:value>4=133</con:value></con:property></con:properties><con:assertion type="Simple Contains" name="ContainsChamberMusic" disabled="true"><con:configuration><token>Chamber Music</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:endpoint>http://musictheatre-production/amf</con:endpoint><con:script/><con:amfCall>API.get_item_ids</con:amfCall></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="QueryStringWithTwoVids" searchProperties="true"><con:settings/><con:testStep type="amfrequest" name="AMF Request"><con:settings/><con:config xsi:type="con:AMFRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>query_string</con:name><con:value>4=133&amp;1=70</con:value></con:property></con:properties><con:assertion type="Simple Contains" name="ContainsChamberMusic" disabled="true"><con:configuration><token>Chamber Music</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:endpoint>http://musictheatre-production/amf</con:endpoint><con:script/><con:amfCall>API.get_item_ids</con:amfCall></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>